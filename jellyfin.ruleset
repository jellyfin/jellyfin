<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Rules for Jellyfin.Server" Description="Code analysis rules for Jellyfin.Server.csproj" ToolsVersion="14.0">
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <!-- error on SA1000: The keyword 'new' should be followed by a space -->
    <Rule Id="SA1000" Action="Error" />
    <!-- error on SA1001: Commas should not be preceded by whitespace -->
    <Rule Id="SA1001" Action="Error" />
    <!-- error on SA1106: Code should not contain empty statements -->
    <Rule Id="SA1106" Action="Error" />
    <!-- error on SA1107: Code should not contain multiple statements on one line -->
    <Rule Id="SA1107" Action="Error" />
    <!-- error on SA1028: Code should not contain trailing whitespace -->
    <Rule Id="SA1028" Action="Error" />
    <!-- error on SA1117: The parameters should all be placed on the same line or each parameter should be placed on its own line -->
    <Rule Id="SA1117" Action="Error" />
    <!-- error on SA1137: Elements should have the same indentation -->
    <Rule Id="SA1137" Action="Error" />
    <!-- error on SA1142: Refer to tuple fields by name -->
    <Rule Id="SA1142" Action="Error" />
    <!-- error on SA1210: Using directives should be ordered alphabetically by the namespaces -->
    <Rule Id="SA1210" Action="Error" />
    <!-- error on SA1316: Tuple element names should use correct casing -->
    <Rule Id="SA1316" Action="Error" />
    <!-- error on SA1414: Tuple types in signatures should have element names -->
    <Rule Id="SA1414" Action="Error" />
    <!-- disable warning SA1513: Closing brace should be followed by blank line -->
    <Rule Id="SA1513" Action="Error" />
    <!-- error on SA1518: File is required to end with a single newline character -->
    <Rule Id="SA1518" Action="Error" />
    <!-- error on SA1629: Documentation text should end with a period -->
    <Rule Id="SA1629" Action="Error" />

    <!-- disable warning SA1009: Closing parenthesis should be followed by a space. -->
    <Rule Id="SA1009" Action="None" />
    <!-- disable warning SA1011: Closing square bracket should be followed by a space. -->
    <Rule Id="SA1011" Action="None" />
    <!-- disable warning SA1101: Prefix local calls with 'this.' -->
    <Rule Id="SA1101" Action="None" />
    <!-- disable warning SA1108: Block statements should not contain embedded comments -->
    <Rule Id="SA1108" Action="None" />
    <!-- disable warning SA1118: Parameter must not span multiple lines. -->
    <Rule Id="SA1118" Action="None" />
    <!-- disable warning SA1128:: Put constructor initializers on their own line -->
    <Rule Id="SA1128" Action="None" />
    <!-- disable warning SA1130: Use lambda syntax -->
    <Rule Id="SA1130" Action="None" />
    <!-- disable warning SA1200: 'using' directive must appear within a namespace declaration -->
    <Rule Id="SA1200" Action="None" />
    <!-- disable warning SA1202: 'public' members must come before 'private' members -->
    <Rule Id="SA1202" Action="None" />
    <!-- disable warning SA1204: Static members must appear before non-static members -->
    <Rule Id="SA1204" Action="None" />
    <!-- disable warning SA1309: Fields must not begin with an underscore -->
    <Rule Id="SA1309" Action="None" />
    <!-- disable warning SA1311: Static readonly fields should begin with upper-case letter -->
    <Rule Id="SA1311" Action="None" />
    <!-- disable warning SA1413: Use trailing comma in multi-line initializers -->
    <Rule Id="SA1413" Action="None" />
    <!-- disable warning SA1512: Single-line comments must not be followed by blank line -->
    <Rule Id="SA1512" Action="None" />
    <!-- disable warning SA1515: Single-line comment should be preceded by blank line -->
    <Rule Id="SA1515" Action="None" />
    <!-- disable warning SA1600: Elements should be documented -->
    <Rule Id="SA1600" Action="None" />
    <!-- disable warning SA1601: Partial elements should be documented -->
    <Rule Id="SA1601" Action="None" />
    <!-- disable warning SA1602: Enumeration items should be documented -->
    <Rule Id="SA1602" Action="None" />
    <!-- disable warning SA1633: The file header is missing or not located at the top of the file -->
    <Rule Id="SA1633" Action="None" />
  </Rules>

  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.Design">
    <!-- error on CA1001: Types that own disposable fields should be disposable -->
    <Rule Id="CA1001" Action="Error" />
    <!-- error on CA1012: Abstract types should not have public constructors -->
    <Rule Id="CA1012" Action="Error" />
    <!-- error on CA1063: Implement IDisposable correctly -->
    <Rule Id="CA1063" Action="Error" />
    <!-- error on CA1305: Specify IFormatProvider -->
    <Rule Id="CA1305" Action="Error" />
    <!-- error on CA1307: Specify StringComparison for clarity -->
    <Rule Id="CA1307" Action="Error" />
    <!-- error on CA1309: Use ordinal StringComparison -->
    <Rule Id="CA1309" Action="Error" />
    <!-- error on CA1310: Specify StringComparison for correctness -->
    <Rule Id="CA1310" Action="Error" />
    <!-- error on CA1513: Use 'ObjectDisposedException.ThrowIf' instead of explicitly throwing a new exception instance -->
    <Rule Id="CA1513" Action="Error" />
    <!-- error on CA1725: Parameter names should match base declaration -->
    <Rule Id="CA1725" Action="Error" />
    <!-- error on CA1725: Call async methods when in an async method -->
    <Rule Id="CA1727" Action="Error" />
    <!-- error on CA1813: Avoid unsealed attributes -->
    <Rule Id="CA1813" Action="Error" />
    <!-- error on CA1816: Call GC.SuppressFinalize correctly -->
    <Rule Id="CA1816" Action="Error" />
    <!-- error on CA1834: Use 'StringBuilder.Append(char)' instead of 'StringBuilder.Append(string)' when the input is a constant unit string -->
    <Rule Id="CA1834" Action="Error" />
    <!-- error on CA1843: Do not use 'WaitAll' with a single task -->
    <Rule Id="CA1843" Action="Error" />
    <!-- error on CA1845: Use span-based 'string.Concat' -->
    <Rule Id="CA1845" Action="Error" />
    <!-- error on CA1849: Call async methods when in an async method -->
    <Rule Id="CA1849" Action="Error" />
    <!-- error on CA1851: Possible multiple enumerations of IEnumerable collection -->
    <Rule Id="CA1851" Action="Error" />
    <!-- error on CA1854: Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup -->
    <Rule Id="CA1854" Action="Error" />
    <!-- error on CA1860: Avoid using 'Enumerable.Any()' extension method -->
    <Rule Id="CA1860" Action="Error" />
    <!-- error on CA1862: Use the 'StringComparison' method overloads to perform case-insensitive string comparisons -->
    <Rule Id="CA1862" Action="Error" />
    <!-- error on CA1863: Use 'CompositeFormat' -->
    <Rule Id="CA1863" Action="Error" />
    <!-- error on CA1864: Prefer the 'IDictionary.TryAdd(TKey, TValue)' method -->
    <Rule Id="CA1864" Action="Error" />
    <!-- error on CA1865-CA1867: Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char -->
    <Rule Id="CA1865" Action="Error" />
    <Rule Id="CA1866" Action="Error" />
    <Rule Id="CA1867" Action="Error" />
    <!-- error on CA1868: Unnecessary call to 'Contains' for sets -->
    <Rule Id="CA1868" Action="Error" />
    <!-- error on CA1869: Cache and reuse 'JsonSerializerOptions' instances -->
    <Rule Id="CA1869" Action="Error" />
    <!-- error on CA1870: Use a cached 'SearchValues' instance -->
    <Rule Id="CA1870" Action="Error" />
    <!-- error on CA1871: Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull' -->
    <Rule Id="CA1871" Action="Error" />
    <!-- error on CA1872: Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString' -->
    <Rule Id="CA1872" Action="Error" />
    <!-- error on CA2016: Forward the CancellationToken parameter to methods that take one
        or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token -->
    <Rule Id="CA2016" Action="Error" />
    <!-- error on CA2201: Exception type System.Exception is not sufficiently specific -->
    <Rule Id="CA2201" Action="Error" />
    <!-- error on CA2213: Disposable fields should be disposed -->
    <Rule Id="CA2213" Action="Error" />
    <!-- error on CA2215: Dispose methods should call base class dispose -->
    <Rule Id="CA2215" Action="Error" />
    <!-- error on CA2216: Disposable types should declare finalizer -->
    <Rule Id="CA2216" Action="Error" />
    <!-- error on CA2249: Use 'string.Contains' instead of 'string.IndexOf' to improve readability -->
    <Rule Id="CA2249" Action="Error" />
    <!-- error on CA2254: Template should be a static expression -->
    <Rule Id="CA2254" Action="Error" />

    <!-- disable warning CA1014: Mark assemblies with CLSCompliantAttribute -->
    <Rule Id="CA1014" Action="Info" />
    <!-- disable warning CA1024: Use properties where appropriate -->
    <Rule Id="CA1024" Action="Info" />
    <!-- disable warning CA1031: Do not catch general exception types -->
    <Rule Id="CA1031" Action="Info" />
    <!-- disable warning CA1032: Implement standard exception constructors -->
    <Rule Id="CA1032" Action="Info" />
    <!-- disable warning CA1040: Avoid empty interfaces -->
    <Rule Id="CA1040" Action="Info" />
    <!-- disable warning CA1062: Validate arguments of public methods -->
    <Rule Id="CA1062" Action="Info" />
    <!-- TODO: enable when false positives are fixed -->
    <!-- disable warning CA1508: Avoid dead conditional code -->
    <Rule Id="CA1508" Action="Info" />
    <!-- disable warning CA1515: Consider making public types internal -->
    <Rule Id="CA1515" Action="Info" />
    <!-- disable warning CA1716: Identifiers should not match keywords -->
    <Rule Id="CA1716" Action="Info" />
    <!-- disable warning CA1720: Identifiers should not contain type names -->
    <Rule Id="CA1720" Action="Info" />
    <!-- disable warning CA1724: Type names should not match namespaces -->
    <Rule Id="CA1724" Action="Info" />
    <!-- disable warning CA1805: Do not initialize unnecessarily -->
    <Rule Id="CA1805" Action="Info" />
    <!-- disable warning CA1812: internal class that is apparently never instantiated.
        If so, remove the code from the assembly.
        If this class is intended to contain only static members, make it static -->
    <Rule Id="CA1812" Action="Info" />
    <!-- disable warning CA1822: Member does not access instance data and can be marked as static -->
    <Rule Id="CA1822" Action="Info" />
    <!-- CA1859: Use concrete types when possible for improved performance -->
    <Rule Id="CA1859" Action="Info" />
    <!-- TODO: Enable -->
    <!-- CA1861: Prefer 'static readonly' fields over constant array arguments if the called method is called repeatedly and is not mutating the passed array -->
    <Rule Id="CA1861" Action="Info" />
    <!-- disable warning CA2000: Dispose objects before losing scope -->
    <Rule Id="CA2000" Action="Info" />
    <!-- disable warning CA2253: Named placeholders should not be numeric values -->
    <Rule Id="CA2253" Action="Info" />
    <!-- disable warning CA5394: Do not use insecure randomness -->
    <Rule Id="CA5394" Action="Info" />
    <!-- error on CA3003: Review code for file path injection vulnerabilities -->
    <Rule Id="CA3003" Action="Info" />
    <!-- error on CA3006: Review code for process command injection vulnerabilities -->
    <Rule Id="CA3006" Action="Info" />

    <!-- disable warning CA1054: Change the type of parameter url from string to System.Uri -->
    <Rule Id="CA1054" Action="None" />
    <!-- disable warning CA1055: URI return values should not be strings -->
    <Rule Id="CA1055" Action="None" />
    <!-- disable warning CA1056: URI properties should not be strings -->
    <Rule Id="CA1056" Action="None" />
    <!-- disable warning CA1303: Do not pass literals as localized parameters -->
    <Rule Id="CA1303" Action="None" />
    <!-- disable warning CA1308: Normalize strings to uppercase -->
    <Rule Id="CA1308" Action="None" />
    <!-- disable warning CA1848: Use the LoggerMessage delegates -->
    <Rule Id="CA1848" Action="None" />
    <!-- disable warning CA2101: Specify marshaling for P/Invoke string arguments -->
    <Rule Id="CA2101" Action="None" />
    <!-- disable warning CA2234: Pass System.Uri objects instead of strings -->
    <Rule Id="CA2234" Action="None" />
  </Rules>

  <Rules AnalyzerId="Microsoft.CodeAnalysis.BannedApiAnalyzers" RuleNamespace="Microsoft.Design">
    <!-- error on RS0030: Do not used banned APIs -->
    <Rule Id="RS0030" Action="Error" />
  </Rules>

  <Rules AnalyzerId="IDisposableAnalyzers" RuleNamespace="IDisposableAnalyzers.Correctness">
    <!-- disable warning IDISP001: Dispose created -->
    <Rule Id="IDISP001" Action="Info" />
    <!-- TODO: Enable when false positives are fixed -->
    <!-- disable warning IDISP003: Dispose previous before re-assigning -->
    <Rule Id="IDISP003" Action="Info" />
    <!-- disable warning IDISP004: Don't ignore created IDisposable -->
    <Rule Id="IDISP004" Action="Info" />
    <!-- disable warning IDISP007: Don't dispose injected -->
    <Rule Id="IDISP007" Action="Info" />
    <!-- disable warning IDISP008: Don't assign member with injected and created disposables -->
    <Rule Id="IDISP008" Action="Info" />
  </Rules>
</RuleSet>
